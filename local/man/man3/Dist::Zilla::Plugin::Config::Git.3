.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Dist::Zilla::Plugin::Config::Git 3"
.TH Dist::Zilla::Plugin::Config::Git 3 "2013-12-03" "perl v5.16.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Dist::Zilla::Plugin::Config::Git \- Plugin configuration containing settings for a Git repo
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 8
\&    [Config::Git / Git::main]
\&    remote        = origin
\&    local_branch  = master
\&    remote_branch = master
\&    allow_dirty   = dist.ini
\&    allow_dirty   = README
\&    allow_dirty   = qr{\ew+\e.ini}
\&    changelog     = Changes
\& 
\&    [Git::CheckFor::CorrectBranch]
\&    git_config = Git::main
\& 
\&    [@Git]
\&    git_config = Git::main
\& 
\&    ; etc.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a configuration plugin for Git repo/branch information.  A configuration plugin is sort of like a Stash, but is better suited
for intra-plugin data sharing, using distro (not user) data.
.PP
Why use this?  To provide a standard set of information to other Git plugins easily, especially if the repo data is non-standard, or if
you need more than one set of data.
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "remote"
.IX Subsection "remote"
Name of the remote repo, in standard Git repo format (refspec or git \s-1URL\s0).
.PP
Default is \f(CW\*(C`origin\*(C'\fR.
.SS "local_branch"
.IX Subsection "local_branch"
Name of the local branch name.
.PP
Default is \f(CW\*(C`master\*(C'\fR.
.SS "remote_branch"
.IX Subsection "remote_branch"
Name of the remote branch name.
.PP
Default is \f(CW\*(C`master\*(C'\fR.
.SS "allow_dirty"
.IX Subsection "allow_dirty"
Filenames of files in the local repo that are allowed to have modifications prior to a write action, such as a commit.  Multiple lines
are allowed.  Any strings in standard \f(CW\*(C`qr\*(C'\fR notation are interpreted as regular expressions.
.PP
Default is \f(CW\*(C`dist.ini\*(C'\fR and whatever changelog is set to.
.SS "changelog"
.IX Subsection "changelog"
Name of your change log.
.PP
Default is \f(CW\*(C`Changes\*(C'\fR.
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
Kent Fredric and Karen Etheridge for implementation discussion.  Graham Knop for continuous code reviews.
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
The project homepage is https://github.com/SineSwiper/Dist\-Zilla\-Plugin\-Config\-Git <https://github.com/SineSwiper/Dist-Zilla-Plugin-Config-Git>.
.PP
The latest version of this module is available from the Comprehensive Perl
Archive Network (\s-1CPAN\s0). Visit <http://www.perl.com/CPAN/> to find a \s-1CPAN\s0
site near you, or see <https://metacpan.org/module/Dist::Zilla::Plugin::Config::Git/>.
.SH "SUPPORT"
.IX Header "SUPPORT"
.SS "Internet Relay Chat"
.IX Subsection "Internet Relay Chat"
You can get live help by using \s-1IRC\s0 ( Internet Relay Chat ). If you don't know what \s-1IRC\s0 is,
please read this excellent guide: <http://en.wikipedia.org/wiki/Internet_Relay_Chat>. Please
be courteous and patient when talking to us, as we might be busy or sleeping! You can join
those networks/channels and get help:
.IP "\(bu" 4
irc.perl.org
.Sp
You can connect to the server at 'irc.perl.org' and talk to this person for help: SineSwiper.
.SS "Bugs / Feature Requests"
.IX Subsection "Bugs / Feature Requests"
Please report any bugs or feature requests via https://github.com/SineSwiper/Dist\-Zilla\-Plugin\-Config\-Git/issues <https://github.com/SineSwiper/Dist-Zilla-Plugin-Config-Git/issues>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Brendan Byrd <BBYRD@CPAN.org>
.SH "CONTRIBUTOR"
.IX Header "CONTRIBUTOR"
Graham Knop <haarg@haarg.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2013 by Brendan Byrd.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Artistic License 2.0 (GPL Compatible)
.Ve
